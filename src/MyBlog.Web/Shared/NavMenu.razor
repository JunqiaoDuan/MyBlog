@using Azure.Storage.Queues
@using MudBlazor
@using MyBlog.Service.Shared.Dtos.Queries
@using MyBlog.Service.Shared.Interfaces.Profiles

@inject QueueServiceClient _queueService
@inject IProfileService _profileService

<div>
    @if (!string.IsNullOrWhiteSpace(blogOwner?.Value))
    {
        <div class="mb-4 text-center">
            <h1 class="display-4 fw-bold blog-title artistic-title">
                @blogOwner.Value
            </h1>
        </div>
    }

    <nav class="d-flex">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All" @onclick='() => OnMenuClick("about")'>
                <span class="oi oi-home" aria-hidden="true"></span> About
            </NavLink>
        </div>
        <div class="nav-item px-3 position-relative">
            <NavLink class="nav-link" href="chat" @onclick='() => OnMenuClick("chat")'>
                <span class="oi oi-audio" aria-hidden="true"></span> AI Agent
                <span class="lantern-badge @(hideChatBadge ? "hidden" : "")">1+</span>
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="projects" @onclick='() => OnMenuClick("projects")'>
                <span class="oi oi-plus" aria-hidden="true"></span> Projects
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="blog" @onclick='() => OnMenuClick("blog")'>
                <span class="oi oi-list-rich" aria-hidden="true"></span> Blog
            </NavLink>
        </div>
    </nav>
</div>

@code {

    private ProfileQueryView? blogOwner;
    private bool hideChatBadge = false;

    protected override async Task OnInitializedAsync()
    {
        var profiles = await _profileService.GetProfilesAsync();
        blogOwner = profiles.FirstOrDefault(p => p.Name == "Name");
    }

    private async void OnMenuClick(string menuCode)
    {
        if (menuCode == "chat")
        {
            hideChatBadge = true;
            StateHasChanged();
        }

        var queueClient = _queueService.GetQueueClient("click-menu");
        await queueClient.CreateIfNotExistsAsync();
        await queueClient.SendMessageAsync($"Clicked {menuCode}");
    }

}
